<?xml version="1.0"?>
<rss version="2.0">
  <channel>
    <title>Leftleg&#39;s blog</title>
    <link>http://leftleg.hzpub.com</link>
    <pubDate>2013-04-27 04:24:57 +0800</pubDate>
    <item>
      <title>openstack 要红</title>
      <link>http://leftleg.hzpub.com/2013/04/27/openstack-goodnews.html</link>
      <pubDate>2013-04-27 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;这几天来自于花旗银行的一份关于Openstack的一份报告，又引发了 Openstack 热潮.&lt;/p&gt;

&lt;p&gt;点击这里 &amp;ndash;&amp;gt; &lt;a href=&#34;http://www.csdn.net/article/2013-04-25/2815050-how_does_OpenStack_impact_the_software&#34; title=&#34;OpenStack将怎样影响软件行业？&#34;&gt;OpenStack将怎样影响软件行业？&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;我想说的是&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;第三方开始发力了&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dell crowbar&lt;/strong&gt;  &lt;a href=&#34;http://crowbar.github.io/home.html&#34;&gt;http://crowbar.github.io/home.html&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;server discovery&lt;/li&gt;
&lt;li&gt;firmware upgrades&lt;/li&gt;
&lt;li&gt;operating system installation via PXE Boot.&lt;/li&gt;
&lt;li&gt;application deployment via Chef.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Redhat RDO&lt;/strong&gt; &lt;a href=&#34;http://openstack.redhat.com/&#34;&gt;http://openstack.redhat.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;三步部署&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Step 0: Prerequisites&lt;/li&gt;
&lt;li&gt;Step 1: Software repositories&lt;/li&gt;
&lt;li&gt;Step 2: Install Packstack Installer&lt;/li&gt;
&lt;li&gt;Step 3: Run Packstack to install OpenStack&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;mirantis fuel&lt;/strong&gt; &lt;a href=&#34;http://fuel.mirantis.com&#34;&gt;http://fuel.mirantis.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;step-by-step through the process of creating a &lt;strong&gt;high-availability OpenStack cluster&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;接下来,我打算都体验一下&lt;/p&gt;
</description>
    </item>
    <item>
      <title>运维基础</title>
      <link>http://leftleg.hzpub.com/2013/04/16/sa-basic.html</link>
      <pubDate>2013-04-16 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;好久没看RSS，发现酷壳几篇文章概括了运维的基本知识点,肯定不全,但熟练掌握,平时工作效率应该会提升很多&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;应该知道的Linux技巧&lt;/strong&gt; &lt;a href=&#34;http://coolshell.cn/articles/8883.html&#34; title=&#34;应该知道的Linux技巧&#34;&gt;http://coolshell.cn/articles/8883.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;sed 简明教程&lt;/strong&gt;  &lt;a href=&#34;http://coolshell.cn/articles/9104.html&#34; title=&#34;sed 简明教程&#34;&gt;http://coolshell.cn/articles/9104.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;AWK 简明教程&lt;/strong&gt; &lt;a href=&#34;http://coolshell.cn/articles/9070.html&#34; title=&#34;AWK 简明教程&#34;&gt;http://coolshell.cn/articles/9070.html&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Cloudfoundry on Openstack 使用 BOSH 完整部署 (3)</title>
      <link>http://leftleg.hzpub.com/2013/04/16/The-bosh-deployment-cloudfoundry-based-openstack-III.html</link>
      <pubDate>2013-04-16 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;&lt;strong&gt;三 部署 cloudfoundry&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;准备&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;部署计划参考&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;作业  实例数 IP  内存  CPU 磁盘 (GB) 是否为必需的？&lt;br /&gt;
debian_nfs_server   1   xx.xx.xx.xx 2 GB    2   16  必需&lt;br /&gt;
nats    1   xx.xx.xx.xx 1 GB    1   8   必需&lt;br /&gt;
ccdb_postgres   1   xx.xx.xx.xx 1 GB    1   8   必需&lt;br /&gt;
uaadb   1   xx.xx.xx.xx 1 GB    1   8   必需&lt;br /&gt;
vcap_redis  1   xx.xx.xx.xx 1 GB    1   8   必需&lt;br /&gt;
uaa 1   xx.xx.xx.xx 1 GB    1   8   必需&lt;br /&gt;
acmdb   1   xx.xx.xx.xx 1 GB    1   8   必需&lt;br /&gt;
acm 1   xx.xx.xx.xx 1 GB    1   8   必需&lt;br /&gt;
cloud_controller    1   xx.xx.xx.xx 2 GB    2   16  必需&lt;br /&gt;
stager  1   xx.xx.xx.xx 1 GB    1   8   必需&lt;br /&gt;
router  2   xx.xx.xx.xx 512 MB  1   8   必需&lt;br /&gt;
health_manager  1   xx.xx.xx.xx 1 GB    1   8   必需&lt;br /&gt;
dea 2   xx.xx.xx.xx 2 GB    2   16  必需&lt;br /&gt;
mysql_node  1   xx.xx.xx.xx 1 GB    1   8   可选&lt;br /&gt;
mysql_gateway   1   xx.xx.xx.xx 1 GB    1   8   可选&lt;br /&gt;
mongodb_node    1   xx.xx.xx.xx 1 GB    1   8   可选&lt;br /&gt;
mongodb_gateway 1   xx.xx.xx.xx 1 GB    1   8   可选&lt;br /&gt;
redis_node  1   xx.xx.xx.xx 1 GB    1   8   可选&lt;br /&gt;
redis_gateway   1   xx.xx.xx.xx 1 GB    1   8   可选&lt;br /&gt;
rabbit_node 1   xx.xx.xx.xx 1 GB    1   8   可选&lt;br /&gt;
rabbit_gateway  1   xx.xx.xx.xx 1 GB    1   8   可选&lt;br /&gt;
postgresql_node 1   xx.xx.xx.xx 1 GB    1   8   可选&lt;br /&gt;
postgresql_gateway  1   xx.xx.xx.xx 1 GB    1   8   可选&lt;br /&gt;
vblob_node  1   xx.xx.xx.xx 1 GB    1   8   可选&lt;br /&gt;
vblob_gateway   1   xx.xx.xx.xx 1 GB    1   8   可选&lt;br /&gt;
backup_manager  1   xx.xx.xx.xx 1 GB    1   8   可选&lt;br /&gt;
service_utilities   1   xx.xx.xx.xx 1 GB    1   8   可选&lt;br /&gt;
serialization_data_server   1   xx.xx.xx.xx 1 GB    1   8   可选&lt;br /&gt;
services_nfs    1   xx.xx.xx.xx 1 GB    1   8   可选&lt;br /&gt;
syslog_aggregator   1   xx.xx.xx.xx 1 GB    1   8   可选&lt;br /&gt;
services_redis  1   xx.xx.xx.xx 1 GB    1   8   可选&lt;br /&gt;
opentsdb    1   xx.xx.xx.xx 1 GB    1   8   可选&lt;br /&gt;
collector   1   xx.xx.xx.xx 1 GB    1   8   可选&lt;br /&gt;
dashboard   1   xx.xx.xx.xx 1 GB    1   8   可选&lt;br /&gt;
service_broker  1   xx.xx.xx.xx 1 GB    1   8   可选&lt;br /&gt;
hbase_master    1   xx.xx.xx.xx 1 GB    1   8   可选&lt;br /&gt;
hbase_slave 1   xx.xx.xx.xx 1 GB    1   8   可选&lt;br /&gt;
collector   1   xx.xx.xx.xx 1 GB    1   8   可选&lt;br /&gt;
login   1   xx.xx.xx.xx 1 GB    1   8   可选&lt;br /&gt;
合计： 41      42 GB   42  384&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;资源模板&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;池名称  规模 配置  作业&lt;br /&gt;
&lt;strong&gt;small&lt;/strong&gt;   30  RAM：1 GB；CPU：1 个；磁盘：8 GB    nats、ccdb_postgres、uaadb、vcap_redis、uaa、acmdb、acm、stager、health_manager、mysql_node、service_broker、hbase_master、hbase_slave、login、mysql_gateway、mongodb_node、mongodb_gateway、redis_node、redis_gateway、postgresql_node、postgresql_gateway、vblob_node、vblob_gateway、backup_manager、service_utilities、serialization_data_server、services_nfs、syslog_aggregator、services_redis、opentsdb、collector、dashboard&lt;br /&gt;
&lt;strong&gt;medium&lt;/strong&gt;  4   RAM：2 GB；CPU：2 个；磁盘：16 GB   debian_nfs_server、cloud_controller、dea&lt;br /&gt;
router  2   RAM：512 M；CPU：1 个；磁盘：8 GB   router&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;根据以上,指定你需要的内容以及需要使用的Openstack资源模板(后面写yml需要使用)&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;bosh target http://1.2.3.4 (bosh director ip)
Target set to `microbosh-openstack (http://1.2.3.4:25555) Ver: 0.6 (release:ce0274ec bosh:0d9ac4d4)&#39;
Your username: admin
Enter password: *****
Logged in as `admin&#39;
target 到 bosh director
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;查看对应openstack最新的 stemcells&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;bosh public stemcells --all
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;下载 stemcells (比较漫长,看到国外网络状况)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;bosh download public stemcell bosh-stemcell-openstack-0.6.7.tgz
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;上传到本地&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;bosh upload stemcell bosh-stemcell-openstack-0.6.7.tgz
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;建立部署目录，下载 cf-release 源码&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mkdir /root/.bosh_deployments
git clone https://github.com/cloudfoundry/cf-release
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;检查更新,下载所有依赖包，并把整个 cloudfoundry 打包成一个tar包
这步时间更长,需要耐心,首先会从一个 Blob 服务器下载二进制文件。然后它会构建包并生成清单文件&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd bosh/release
git submodule update --init
bosh create release --with-tarball --force
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;将创建好的Release tar包上传到 BOSH 的director&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;bosh upload release dev_releases/bosh-x-y-dev.tgz
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;确认 releases &amp;amp; stemcell 无误&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;bosh releases
bosh deployments
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;部署清单可参照:&lt;br /&gt;
&lt;a href=&#34;https://github.com/leftleghu/cloudfoundry/blob/master/cfos.yml&#34;&gt;https://github.com/leftleghu/cloudfoundry/blob/master/cfos.yml&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;利用示例部署完成后,一共 29 个VM&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;bosh deployment bosh-release.yml
bosh deploy
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;问题:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;dns 问题, 可能配置问题,dns会去取Openstack nova 的设置,但 vm dns 需要设置为 micro-bosh 地址,才可正常解析,保证agent服务正常&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;服务监听地址问题,很几个服务配置模板取的是vip地址监听,会导致错误,需要修改成0.0.0.0,应该是个Bug.
如果自己修改的话，需要先修改 vm .erb 模板的变量,再修改配置,最后别忘记重启 monit restart all&lt;/li&gt;
&lt;li&gt;部署并发进程问题,这也应该是个Bug,初次部署,会一次性部署所有的VM,比如29个VM，openstack需要时间,但部署超时90S，超时后会报错误。
所以，需要手工修改并发的数量: &lt;a href=&#34;https://github.com/cloudfoundry/bosh/blob/master/director/lib/director/jobs/update_deployment.rb#L85&#34;&gt;https://github.com/cloudfoundry/bosh/blob/master/director/lib/director/jobs/update_deployment.rb#L85&lt;/a&gt;
ps：貌似bug已经修复，可以通过(director/templates/director.yml.erb)这个模板调配。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;参考资源&lt;/strong&gt;&lt;br /&gt;
&lt;a href=&#34;http://cndocs.cloudfoundry.com/&#34;&gt;http://cndocs.cloudfoundry.com/&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;http://blog.csdn.net/alan90121/article/details/8181962&#34;&gt;http://blog.csdn.net/alan90121/article/details/8181962&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;http://cloudfoundry.github.com/&#34;&gt;http://cloudfoundry.github.com/&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;https://groups.google.com/a/cloudfoundry.org/forum/?fromgroups=#!forum/bosh-users&#34;&gt;https://groups.google.com/a/cloudfoundry.org/forum/?fromgroups=#!forum/bosh-users&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;https://groups.google.com/a/cloudfoundry.org/forum/?fromgroups=#!forum/vcap-dev&#34;&gt;https://groups.google.com/a/cloudfoundry.org/forum/?fromgroups=#!forum/vcap-dev&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Cloudfoundry on Openstack 使用 BOSH 完整部署(2)</title>
      <link>http://leftleg.hzpub.com/2013/04/16/The-bosh-deployment-cloudfoundry-based-openstack-II.html</link>
      <pubDate>2013-04-16 12:00:00 +0800</pubDate>
      <description>&lt;pre&gt;&lt;code&gt;bosh target http://1.2.3.4 (micro-bosh ip)
Target set to `microbosh-openstack (http://1.2.3.4:25555) Ver: 0.6 (release:ce0274ec bosh:0d9ac4d4)&#39;
Your username: admin
Enter password: *****
Logged in as `admin&#39;
target 到 micro-bosh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;查看对应openstack最新的 stemcells&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;bosh public stemcells --all
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;下载 stemcells (比较漫长,看到国外网络状况)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;bosh download public stemcell bosh-stemcell-openstack-0.6.7.tgz
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;上传到本地&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;bosh upload stemcell bosh-stemcell-openstack-0.6.7.tgz
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;建立部署目录，下载bosh源码&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mkdir /root/.bosh_deployments
git clone git://github.com/cloudfoundry/bosh.git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;检查更新,下载所有依赖包，并把整个BOSH打包成一个tar包
这步时间更长,需要耐心,首先会从一个 Blob 服务器下载二进制文件。然后它会构建包并生成清单文件&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd bosh/release
git submodule update --init
bosh create release --with-tarball --force
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;将创建好的Release tar包上传到Micro BOSH的director&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;bosh upload release dev_releases/bosh-x-y-dev.tgz
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;确认 releases &amp;amp; stemcell 无误&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;bosh releases
bosh deployments
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;部署清单可参照:
&lt;a href=&#34;https://github.com/leftleghu/cloudfoundry/blob/master/bosh-release.yml&#34;&gt;https://github.com/leftleghu/cloudfoundry/blob/master/bosh-release.yml&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;bosh deployment bosh-release.yml
bosh deploy
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;部署完成后,一共8个VM&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;bosh vms
+----------------------+---------+---------------+-----------------------------+
| Job/index            | State   | Resource Pool | IPs                         |
+----------------------+---------+---------------+-----------------------------+
| blobstore/0          | running | small         | 172.16.13.31                |
| director/0           | running | small         | 172.16.13.28, 172.16.13.195 |
| health_monitor/0     | running | small         | 172.16.13.30                |
| nats/0               | running | small         | 172.16.13.16                |
| openstack_registry/0 | running | small         | 172.16.13.29                |
| postgres/0           | running | small         | 172.16.13.26                |
| powerdns/0           | running | small         | 172.16.13.27, 172.16.13.194 |
| redis/0              | running | small         | 172.16.13.15                |
+----------------------+---------+---------------+-----------------------------+
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;同样,如果部署中途遇到失败,不要手工删除vm，需要使用如下命令重来:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;bosh -n delete deployment &amp;lt;name&amp;gt; --force
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;部署注意DNS设置,如果有问题,DNS设置成 &lt;strong&gt;micro-bosh ip&lt;/strong&gt;&lt;/p&gt;
</description>
    </item>
    <item>
      <title>A new beginning</title>
      <link>http://leftleg.hzpub.com/2013/04/11/A-new-beginning.html</link>
      <pubDate>2013-04-11 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;Blog 一个新的开始,以前的Blog还在openshift,换了域名leftleghu.hzpub.com
不能访问?要翻墙唉！&lt;/p&gt;

&lt;h2&gt;&lt;img src=&#34;http://pic.yupoo.com/leftleg/C5b6Xltz/medium.jpg&#34; alt=&#34;新的开始&#34; /&gt;
&lt;/h2&gt;

&lt;hr /&gt;

&lt;p&gt;现在寄居在 Github,相对于以前的地方有如下好处：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;免费,完全免费&lt;/li&gt;
&lt;li&gt;稳定,相对于之前的 cloudfoundry appfog openshift,一圈用下来,应该会更稳定.&lt;/li&gt;
&lt;li&gt;速度快,虽然都在国外,但 cloudfoundry appfog openshift 因为某些原因都是龟速.当然静态的轻量级也是其中一个原因.&lt;/li&gt;
&lt;li&gt;至上次刷票事件以后,Github 的经历,至少目前来说被xx的可能不大.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;需要注意的地方:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;因为是静态的缘故,写博客就没有以前那么方便了,还需要操作 Github,如果你也想放在Github的话.&lt;/li&gt;
&lt;li&gt;其他的,或者具体的,提供几个关键字: &lt;a href=&#34;https://github.com/wendal/gor&#34; title=&#34;gor&#34;&gt;gor&lt;/a&gt; &lt;a href=&#34;http://ruhoh.com/&#34; title=&#34;ruhoh&#34;&gt;ruhoh&lt;/a&gt; &lt;a href=&#34;http://wowubuntu.com/markdown/&#34; title=&#34;markdown&#34;&gt;markdown&lt;/a&gt; &lt;a href=&#34;http://markdownpad.com&#34; title=&#34;markdownpad&#34;&gt;markdownpad&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    <item>
      <title>Cloudfoundry on Openstack 使用 BOSH 完整部署(1)</title>
      <link>http://leftleg.hzpub.com/2013/04/11/Cloudfoundry-on-Openstack-%E4%BD%BF%E7%94%A8-BOSH-%E5%AE%8C%E6%95%B4%E9%83%A8%E7%BD%B2%281%29.html</link>
      <pubDate>2013-04-11 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;&lt;strong&gt;了解&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://cndocs.cloudfoundry.com/deploy/bosh-docs.html&#34;&gt;什么是bosh&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;系统需求&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;仅支持 Ubuntu 10.04 LTS 64-bit image (目前也有人用 centos6 实现)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;部署过程&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Inception VM &amp;ndash;&amp;gt; micro-bosh &amp;ndash;&amp;gt; bosh &amp;ndash;&amp;gt; cloudfoundry&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;准备&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Inception VM   1vm&lt;/li&gt;
&lt;li&gt;micro-bosh     1vm&lt;/li&gt;
&lt;li&gt;bosh           8vm&lt;/li&gt;
&lt;li&gt;cloudfoundry   13+ vm&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;请确认 openstack 各项服务正常 特别是 meta-data 服务&lt;/strong&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;1. 安装 Inception VM 部署 micro-bosh&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;用途&lt;/strong&gt; (转)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;create a custom micro BOSH stemcell&lt;/li&gt;
&lt;li&gt;create an OpenStack image from the custom micro BOSH stemcell&lt;/li&gt;
&lt;li&gt;run a registry of OpenStack to track provisioned components in OpenStack&lt;/li&gt;
&lt;li&gt;store a registry of deployed Micro BOSHes&lt;/li&gt;
&lt;li&gt;store log files of BOSH CLI interactions with each Micro BOSH&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;安装&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;使用 &amp;ldquo;Ubuntu 10.04 LTS 64-bit image&amp;rdquo; 镜像在Openstack上创建一个vm,取名 Inception VM (此vm需要能上网,可能还需要能翻墙)
(也可以使用 fog &lt;a href=&#34;http://fog.io/&#34;&gt;http://fog.io/&lt;/a&gt; 创建一个vm)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;登录到 Inception VM&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;export ORIGUSER=ubuntu
export UBUNTU_ISO=/root/ubuntu-10.04.4-LTS-amd64.iso
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;上传iso到 /root 目录,此步不是必做,但能提高效率,不然需要的包都从网络取&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;执行初始化环境脚本&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;curl -s https://github.com/leftleghu/cloudfoundry/blob/master/prepare_inception_openstack.sh | bash
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;此脚本包含了bosh命令所需环境,具体自己看脚本吧&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;source /etc/profile
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;脚本最后的 bosh help micro , 应该会输出 bosh micro 的帮助信息,不过没输出的话,说明bug还没修补,我们可以执行:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd /var/vcap/bootstrap/bosh/deployer
gem install pkg/bosh_deployer-1.3.1.gem
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后执行  bosh help micro ，看看是否正常输出.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;配置&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;现在可以开始准备部署 micro-bosh,配置文件是 micro_bosh.yml&lt;/p&gt;

&lt;p&gt;关于 Manifest 的语法可以看这里: &lt;a href=&#34;https://github.com/panlm/doc/blob/master/documentation.md&#34;&gt;https://github.com/panlm/doc/blob/master/documentation.md&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd /var/vcap/deployments
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;转到deployments目录，此目录由之前 prepare_inception_openstack.sh 创建&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;curl -s https://github.com/leftleghu/cloudfoundry/blob/master/create_keypair &amp;gt; /tmp/create_keypair
chmod 755 /tmp/create_keypair
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;使用脚本创建一个 inception keypair，以后方便登录使用&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;/tmp/create_keypair openstack OS_USERNAME OS_PASSWORD OS_TENANT_NAME OS_AUTH_URL inception
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;使用脚本生成 micro_bosh.yml&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;curl -s https://github.com/leftleghu/cloudfoundry/blob/master/create_micro_bosh_yml &amp;gt; /tmp/create_micro_bosh_yml
chmod 755 /tmp/create_micro_bosh_yml
/tmp/create_micro_bosh_yml microbosh-openstack openstack OS_USERNAME OS_PASSWORD OS_TENANT_NAME OS_AUTH_URL inception IP_ADDRESS PASSWORD
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;自定义 stemcell&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd /var/vcap/releases/bosh-release  
bosh create release --with-tarball
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;创建 release，结果会输出:/var/vcap/releases/bosh-release/dev_releases/bosh-x.y-dev.tgz&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd /var/vcap/bootstrap/bosh/agent
rake stemcell2:micro[&amp;quot;openstack&amp;quot;,/var/vcap/releases/bosh-release/micro/openstack.yml,/var/vcap/releases/bosh-release/dev_releases/bosh-x.y-dev.tgz]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;创建 stemcell 这样就得到了自定义的stemcell。一切正常的话会输出:&lt;br /&gt;
Generated stemcell: /var/tmp/bosh/agent-x.y.z-nnnnn/work/work/micro-bosh-stemcell-openstack-x.y.z.tgz&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd /var/vcap/stemcells
cp /var/tmp/bosh/agent-x.y.z-nnnnn/work/work/micro-bosh-stemcell-openstack-x.y.z.tgz .
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;拷贝 stemcell 到部署目录&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;部署 micro-bosh&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd /var/vcap/deployments
bosh micro deployment microbosh-openstack
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;一切正常的话部署完毕.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;bosh target http://1.2.3.4
Target set to `microbosh-openstack (http://1.2.3.4:25555) Ver: 0.6 (release:ce0274ec bosh:0d9ac4d4)&#39;
Your username: admin
Enter password: *****
Logged in as `admin&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;可以 target 到 micro-bosh ，默认验证: admin:admin&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;bosh status
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;查看部署状态&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;bosh micro status
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;查看micro-bosh状态&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd /var/vcap/deployments
tail -f microbosh-openstack/bosh_micro_deploy.log
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;排错检查日志&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;bosh micro delete
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果遇到问题，需要重建，最好通过此命令删除 micro-bosh,不要手工删除虚拟机&lt;/p&gt;
</description>
    </item>
  </channel>
</rss>